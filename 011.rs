fn main() {
  let input = "389344583542972267855845631756389386175245554258836953363658\
               588717823246758882719317359591864853885246397439326442853885\
               673925939932274184461395722967461956696692165644347631772996\
               876418394589976529448132799895615495657146787248757631454946\
               826112228138451326683476943691354443125825334637464158949272\
               888522265214615826122529614483568255613392243643818821128845\
               869221773714583446853482994599336631437546576746893977393997\
               827296838854679154752636634816367216224558516889285897772351\
               675228459732217634941248511617384473367987125398576264385215\
               174839659327527458248129586499188698598842796615594439235224\
               831462913897235846795961427955351124786386966352682332646757\
               146237166339618895169628691697992358735899212774172372762323\
               523853199199699918197666422627471559153156649534521284968358\
               958222546555584731219912226877392317518312812455624991645887\
               878536132271351315317515785559728948243944973246975474854443\
               755325141247622541593247884996189729972122819826282351515984\
               894174278627226223688851442127914732938346592935889676144913\
               591782947332183426712275937124733815578777495262661679126588\
               992295965388728873523329196814664853375495819982178949991476\
               327986993121813626649262781897233454975128219188355836187127\
               737585125975129461192175692769439497776463393293857313222138\
               986161719529174215636249476952182959947675319842228328773588\
               819758432771969775844246288631196172384932695921392819518229\
               331622733499892683913991513847251468668988787455936752425417\
               558213531854591236187713936753843468393333326414628984223892\
               198927511232368135625697957694864448998695153868994988478717\
               319445752347415622938946572547381765151613651444651343641912\
               653387512564585522392119748183343465826465591273113335646419\
               325163563742322222727319262882516599382751162595685675477684\
               991985841437587494357288915428186274959589643858188942455998\
               891465838729341466236136479384421329867723678799867716674394\
               581289952629213246575158292513126293363622859313486136349384\
               916816876526164765234289157644529246234117147748722325379593\
               5253493869317616741963486473";
  println!("{}", run(input, 1));
}

fn run(captcha: &str, next_idx: usize) -> u32 {
  let bytes = captcha.as_bytes();

  bytes.iter().enumerate().fold(0, |s, (idx, byte)| {
    if byte == &bytes[(idx + next_idx) % bytes.len()] {
      return s + (byte - b'0') as u32;
    }
    s
  })
}
